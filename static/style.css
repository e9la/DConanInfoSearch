/* ====== 全局布局 ====== */
* {
  box-sizing: border-box;
}

body {
  font-family: "微软雅黑", "Helvetica Neue", sans-serif;
  background-color: #f5f7fa;
  margin: 0;
  padding: 2em;
  padding-bottom: 6em;
  color: #333;
}

.section {
  background-color: #fff;
  padding: 2em;
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
  margin: 2em auto;
  max-width: 720px;
}

/* ====== 标题与头部 ====== */
.header-box {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1em;
  margin-top: 1em;
  margin-bottom: 1.5em;
}

.logo-img {
  width: 80px;
  height: auto;
  border-radius: 8px;
}

.title-text {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.title-text div:nth-child(1) { font-size: 1.9em; font-weight: bold; }
.title-text div:nth-child(2) { font-size: 2.4em; font-weight: bold; }
.title-text div:nth-child(3) { font-size: 1.3em; }

/* ====== 搜索栏 ====== */
#search-form {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 1em;
  margin-top: 1em;
}

#search-form input,
#search-form select,
#search-form button {
  padding: 0.6em;
  font-size: 1em;
  border-radius: 4px;
  border: 1px solid #ccc;
}

#volume-filter,
#source-filter {
  flex: 1 1 30%;
  min-width: 100px;
}

#word-input {
  flex: 2 1 60%;
  min-width: 160px;
}

#search-form button {
  background-color: #0078D7;
  color: white;
  border: none;
  cursor: pointer;
  padding: 0.6em 1.2em;
  min-width: 120px;
  max-width: 180px;
}

#search-form button:hover {
  background-color: #005fa3;
}

/* ====== 模式描述区域 ====== */
.mode-description {
  background-color: #eaf4ff;
  border: 1px solid #b3d4fc;
  padding: 1em;
  border-radius: 6px;
  font-size: 0.95em;
  line-height: 1.6;
}

/* ====== 页脚样式 ====== */
footer {
  text-align: left;
  margin-top: 3em;
  color: #555;
  font-size: 0.85em;
  padding: 1.5em;
  background-color: #f0f2f5;
  border-top: 1px solid #ccc;
  line-height: 1.6;
  max-width: 720px;
  margin-left: auto;
  margin-right: auto;
}

footer a {
  color: #0078D7;
  text-decoration: none;
}

footer a:hover {
  text-decoration: underline;
}

/* ====== Tab 标签 ====== */
.tab-bar {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex;
  background: #ffffff;
  border-top: 1px solid #ccc;
  z-index: 10;
  padding: 0.4em 0;
  justify-content: space-around;
}

.tab-bar button {
  border: 1px solid #ccc;
  border-radius: 8px;
  padding: 0.6em 1.2em;
  background: #f9f9f9;
  font-size: 1em;
  cursor: pointer;
  transition: 0.2s;
}

.tab-bar button.active {
  background-color: #0078D7;
  color: white;
  border-color: #0078D7;
  font-weight: bold;
}

/* ====== 真伪考据卡片 ====== */
.debunk-card {
  border: 1px solid #ddd;
  border-radius: 8px;
  margin-bottom: 2em;
  padding: 1em;
  background-color: #fff;
  overflow: hidden;
  max-width: 100%;
}

.debunk-card h3 {
  margin: 0 0 0.8em;
  font-size: 1.2em;
  color: #222;
}

/* 内容布局：默认横向展示 */
.debunk-inner {
  display: block;
  margin-top: 1em;
  position: relative;
  max-height: 300px;
  overflow: hidden;
  transition: max-height 0.3s ease;
}

.debunk-card.expanded .debunk-inner {
  max-height: none;
}

.debunk-claim,
.debunk-truth {
  margin-bottom: 1em;
}

.debunk-claim h4,
.debunk-truth h4 {
  font-size: 1em;
  margin-bottom: 0.5em;
  color: #444;
}

.debunk-claim p,
.debunk-truth p {
  line-height: 1.6;
  margin-bottom: 0.5em;
  color: #333;
}

.debunk-image {
  max-width: 100%;
  margin-top: 0.5em;
  border: 1px solid #ccc;
  border-radius: 4px;
}

.toggle-btn {
  display: block;
  margin-top: 0.5em;
  background: none;
  border: none;
  color: #0078D7;
  cursor: pointer;
  font-size: 0.9em;
}


.no-result {
  font-style: italic;
  color: #888;
  padding: 1em;
}

/* ====== 响应式调整（移动设备） ====== */
@media (max-width: 768px) {
  #search-form input,
  #search-form button,
  #search-form select {
    flex: 100%;
  }

  .debunk-inner {
    flex-direction: column;
  }

  .debunk-claim,
  .debunk-truth {
    width: 100%;
  }
}

function renderDebunkResults(data, word) {
  resultList.innerHTML = "";

  if (!Array.isArray(data) || data.length === 0) {
    resultList.innerHTML = `<div class='no-result'>未找到包含「${word}」的结果。</div>`;
    return;
  }

  data.forEach(({ title, claim, truth }) => {
    const card = document.createElement("div");
    card.className = "debunk-card";

    const titleEl = document.createElement("h3");
    titleEl.textContent = title;
    card.appendChild(titleEl);

    const inner = document.createElement("div");
    inner.className = "debunk-inner";

    // 创建可滚动的内容容器
    const scrollable = document.createElement("div");
    scrollable.className = "debunk-scrollable";

    const claimDiv = document.createElement("div");
    claimDiv.className = "debunk-claim";
    const claimHeader = document.createElement("h4");
    claimHeader.textContent = "📌 流传说法";
    claimDiv.appendChild(claimHeader);
    if (claim.note) {
      const note = document.createElement("p");
      note.innerHTML = `<em>${claim.note}</em>`;
      claimDiv.appendChild(note);
    }
    claim.text.split("\n").forEach(line => {
      const p = document.createElement("p");
      p.textContent = line;
      claimDiv.appendChild(p);
    });
    (claim.images || []).forEach(img => {
      const i = document.createElement("img");
      i.src = img;
      i.className = "debunk-image";
      claimDiv.appendChild(i);
    });
    (claim.links || []).forEach(link => {
      if (link) {
        const li = document.createElement("li");
        li.innerHTML = `<a href="${link}" target="_blank">${link}</a>`;
        const ul = claimDiv.querySelector("ul") || document.createElement("ul");
        ul.appendChild(li);
        claimDiv.appendChild(ul);
      }
    });

    const truthDiv = document.createElement("div");
    truthDiv.className = "debunk-truth";
    const truthHeader = document.createElement("h4");
    truthHeader.textContent = "✅ 考据结论";
    truthDiv.appendChild(truthHeader);
    if (truth.note) {
      const note = document.createElement("p");
      note.innerHTML = `<em>${truth.note}</em>`;
      truthDiv.appendChild(note);
    }
    truth.text.split("\n").forEach(line => {
      const p = document.createElement("p");
      p.textContent = line;
      truthDiv.appendChild(p);
    });
    (truth.images || []).forEach(img => {
      const i = document.createElement("img");
      i.src = img;
      i.className = "debunk-image";
      truthDiv.appendChild(i);
    });
    (truth.links || []).forEach(link => {
      if (link) {
        const li = document.createElement("li");
        li.innerHTML = `<a href="${link}" target="_blank">${link}</a>`;
        const ul = truthDiv.querySelector("ul") || document.createElement("ul");
        ul.appendChild(li);
        truthDiv.appendChild(ul);
      }
    });

    inner.appendChild(claimDiv);
    inner.appendChild(truthDiv);
    scrollable.appendChild(inner);
    card.appendChild(scrollable);

    // 添加遮罩和“展开”按钮
    const overlay = document.createElement("div");
    overlay.className = "debunk-overlay";

    const toggleBtn = document.createElement("button");
    toggleBtn.textContent = "展开";
    toggleBtn.className = "debunk-toggle";

    toggleBtn.addEventListener("click", () => {
      card.classList.toggle("expanded");
      toggleBtn.textContent = card.classList.contains("expanded") ? "收起" : "展开";
    });

    overlay.appendChild(toggleBtn);
    card.appendChild(overlay);

    resultList.appendChild(card);
  });
}
